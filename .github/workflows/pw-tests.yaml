name: RUM Integration End-to-End Tests
run-name: ${{ endsWith(github.run_id, '0') && 'A' || endsWith(github.run_id, '1') && 'A' || endsWith(github.run_id, '2') && 'A' || endsWith(github.run_id, '3') && 'A' || endsWith(github.run_id, '4') && 'A' || 'B' }}, run id @${{ github.run_id }}
on:
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # every hour
    - cron:  '0 * * * *'

jobs:
  make-request:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    outputs:
      worker: ${{ steps.select_worker.outputs.worker }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - id: select_worker
      name: Select worker to use for RUM-collector
      run: echo "worker=`./src/scripts/select-worker.sh ${GITHUB_RUN_ID}`" >> "$GITHUB_OUTPUT"

    - name: Install dependencies
      run: cd test/pw && npm ci

    - name: Set up host mapping
      env:
        WORKER: ${{ steps.select_worker.outputs.worker }}
      run: >
        echo 'Worker:' $WORKER &&
        sudo echo "$(dig +short n.sni.global.fastly.net | head -n 1) rum.hlx.page" | sudo tee -a /etc/hosts

    - name: Try out host mapping
      run: echo '/etc/hosts:' && sudo cat /etc/hosts && echo 'getent hosts rum.hlx.page' && getent hosts rum.hlx.page

    - name: Install Playwright Browsers
      run: cd test/pw && npx playwright install --with-deps chromium

    - name: Run Playwright tests
      run: cd test/pw && npm run test

    # - name: Wait for an hour (temporarily)
    #   run: sleep 3600

  check-bigquery:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    needs: make-request
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Retrieve worker used
        env:
          WORKER: ${{needs.make-request.outputs.worker}}
        run:  echo $WORKER

      - name: Sleep for 15 secs until the data is ready in BigQuery
        run: sleep 15

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCLOUD_CRED_FILE }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: Check gcloud CLI
        run: gcloud info && gcloud auth list && bq version

      - name: Check BigQuery for request record
        run: npm i && npm t test/unit/bigquery.test.js

  check-coralogix:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    needs: make-request
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Retrieve worker used
        env:
          WORKER: ${{needs.make-request.outputs.worker}}
        run:  echo $WORKER

      - name: Sleep for 15 mins until the data is ready in Coralogix
        run: sleep 900

      - name: Check Coralogix for request record
        env:
          CORALOGIX_TOKEN: ${{ secrets.CORALOGIX_TOKEN }}
        run: npm i && npm t test/unit/coralogix.test.js

  check-s3:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    needs: make-request
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Retrieve worker used
        env:
          WORKER: ${{needs.make-request.outputs.worker}}
        run:  echo $WORKER

      - name: Sleep for 15 mins until the data is ready in S3
        run: sleep 900

      - name: Check s3 for request record
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: npm i && npm t test/unit/s3.test.js
